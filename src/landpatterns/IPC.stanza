#use-added-syntax(jitx)
defpackage jsl/landpatterns/IPC:
  import core
  import math
  import jitx

  import jsl/design/settings
  import jsl/landpatterns/leads with:
    only => (LeadFillets, to-tuple)

doc: \<DOC>
IPC Formula Results from Section 3 of IPC 7351B

TODO: Add Diagram here

<DOC>
public defstruct IpcResults:
  Zmax:Double,
  Gmin:Double,
  Xmin:Double,

public defmethod print (o:OutputStream, i:IpcResults) :
  print(o, "IpcResults(Zmax:%_, Gmin:%_, Xmin:%_" % [Zmax(i), Gmin(i), Xmin(i)])

doc: \<DOC>
Compute the Pad Size from the IPC Formula Results
@return Dimension of the Pad. The `x` dimension is
the length of the pad in the `lead-span` direction.
The `y` dimension is the width of the pad in the lead-width direction.
<DOC>
public defn pad-size (i:IpcResults) -> Dims:
  Dims(0.5 * (Zmax(i) - Gmin(i)), Xmin(i))

doc: \<DOC>
Compute Pad Geometry According to IPC Rules
@param L Lead-Span or edge-of-lead to edge-of-lead distance for an IC package.
@param T Lead Length, length of the exposed contact in the same dimension as `L`
@param W Lead Width, width of the exposed contact in the dimension orthogonal to `L`
@param fillets Specifications for the solder fillets created when soldering the
lead to the land-pattern pad. These parameters define extra spacing around the lead
dimension to form these fillets.
@return
<DOC>
public defn ipc-formula (L:Toleranced, ; the distance from edge-of-lead to edge-of-lead on the exterior of the land pattern
                  T:Toleranced, ; the nominal size of the leads, in the same dimension as L
                  W:Toleranced, ; the nominal size of the leads, in the dimension orthogonal to L
                  fillets:LeadFillets) -> IpcResults : ; looked up using lead-fillets(lead-type, density-level)
  ; compute root-mean-squared of a sequence of numbers
  val [Jt, Jh, Js, _] = to-tuple(fillets)
  val Lmax = max-value(L)
  val Lmin = min-value(L)
  val Wmin = min-value(W)
  val Tmin = min-value(T)
  val Smax = Lmax - 2.0 * Tmin
  val C_L  = tolerance-range(L)
  val C_W  = tolerance-range(W)
  val C_T  = tolerance-range(T)
  val C_S  = sqrt(C_L * C_L + C_T * C_T)
  val Zmax = Lmin + 2.0 * Jt + C_L ; the distance from edge of land to edge of land on the exterior of the land pattern
  val Gmin = Smax - 2.0 * Jh - C_S ; the distance from edge of land to edge of land on the interior of the land pattern
  val Xmin = Wmin + 2.0 * Js + C_W ; the size of the land in the dimension orthogonal to Z and G.
  IpcResults(Zmax, Gmin, Xmin)