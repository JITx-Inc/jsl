doc: \<DOC>
@brief DDR4

<DOC>
#use-added-syntax(jitx)
defpackage jsl/examples/protocols/memory/ddr4-src :
  import core
  import jitx
  import jitx/commands

  import jsl/symbols
  import jsl/landpatterns

  import jsl/si
  import jsl/pin-assignment
  import jsl/bundles
  import jsl/protocols/memory/ddr4

public pcb-component ddr4-mem-ic :
  reference-prefix = "U"
  mpn = "memory-JITX-DDR4"
  description = "Dummy DDR4 memory following JEDEC spec"

  port ACT_n   : pin
  port ALERT_n : pin
  port A       : pin[14] ; also could be written as pin[18]
  port BA      : pin[2]
  port BG      : pin[2]
  port CAS_n   : pin ; aka A[15]
  port CKE     : pin
  port CK      : diff-pair
  port CS_n    : pin
  port DQ      : pin[16]
  port LDQS    : diff-pair
  port ODT     : pin
  port PAR     : pin
  port RAS_n   : pin ; aka A[16]
  port TEN     : pin
  port UDQS    : diff-pair
  port VDDQ    : pin[10]
  port VDD     : pin[10]
  port VREFCA  : pin
  port VSSQ    : pin[6]
  port VSS     : pin[11]
  port WE_n    : pin ; aka A[14]
  port ZQ      : pin

  pin-properties :
    [pin:Ref        | pads:Ref ...  ]
    [ VDDQ[0]       | A[1]          ]
    [ VSSQ[0]       | A[2]          ]
    [ DQ[8]         | A[3]          ]
    [ UDQS.N        | A[7]          ]
    [ VSSQ[1]       | A[8]          ]
    [ VDDQ[1]       | A[9]          ]
    [ VPP[0]        | B[1]          ]
    [ VSS[0]        | B[2]          ]
    [ VDD[0]        | B[3]          ]
    [ UDQS.P        | B[7]          ]
    [ DQ[9]         | B[8]          ]
    [ VDD[1]        | B[9]          ]
    [ VDDQ[2]       | C[1]          ]
    [ DQ[12]        | C[2]          ]
    [ DQ[10]        | C[3]          ]
    [ DQ[11]        | C[7]          ]
    [ DQ[13]        | C[8]          ]
    [ VSSQ[2]       | C[9]          ]
    [ VDD[2]        | D[1]          ]
    [ VSS[1]        | D[2]          ]
    [ DQ[14]        | D[3]          ]
    [ DQ[15]        | D[7]          ]
    [ VSS[2]        | D[8]          ]
    [ VDDQ[3]       | D[9]          ]
    [ VSS[3]        | E[1]          ]
    [ VSS[4]        | E[9]          ]
    [ VSSQ[3]       | F[1]          ]
    [ VDDQ[4]       | F[2]          ]
    [ LDQS.N        | F[3]          ]
    [ DQ[1]         | F[7]          ]
    [ VDDQ[5]       | F[8]          ]
    [ ZQ            | F[9]          ]
    [ VDDQ[6]       | G[1]          ]
    [ DQ[0]         | G[2]          ]
    [ LDQS.P        | G[3]          ]
    [ VDD[3]        | G[7]          ]
    [ VSS[5]        | G[8]          ]
    [ VDDQ[7]       | G[9]          ]
    [ VSSQ[4]       | H[1]          ]
    [ DQ[4]         | H[2]          ]
    [ DQ[2]         | H[3]          ]
    [ DQ[3]         | H[7]          ]
    [ DQ[5]         | H[8]          ]
    [ VSSQ[5]       | H[9]          ]
    [ VDD[4]        | J[1]          ]
    [ VDDQ[8]       | J[2]          ]
    [ DQ[6]         | J[3]          ]
    [ DQ[7]         | J[7]          ]
    [ VDDQ[9]       | J[8]          ]
    [ VDD[5]        | J[9]          ]
    [ VSS[6]        | K[1]          ]
    [ CKE           | K[2]          ]
    [ ODT           | K[3]          ]
    [ CK.P          | K[7]          ]
    [ CK.N          | K[8]          ]
    [ VSS[7]        | K[9]          ]
    [ VDD[6]        | L[1]          ]
    [ WE_n          | L[2]          ] ; aka A[14]
    [ ACT_n         | L[3]          ]
    [ CS_n          | L[7]          ]
    [ RAS_n         | L[8]          ] ; aka A[16]
    [ VDD[7]        | L[9]          ]
    [ VREFCA        | M[1]          ]
    [ BG[0]         | M[2]          ]
    [ A[10]         | M[3]          ] ; /AP
    [ A[12]         | M[7]          ] ; /BC_n
    [ CAS_n         | M[8]          ] ; aka A[15]
    [ VSS[8]        | M[9]          ]
    [ VSS[9]        | N[1]          ]
    [ BA[0]         | N[2]          ]
    [ A[4]          | N[3]          ]
    [ A[3]          | N[7]          ]
    [ BA[1]         | N[8]          ]
    [ TEN           | N[9]          ]
    [ RESET_n       | P[1]          ]
    [ A[6]          | P[2]          ]
    [ A[0]          | P[3]          ]
    [ A[1]          | P[7]          ]
    [ A[5]          | P[8]          ]
    [ ALERT_n       | P[9]          ]
    [ VDD[8]        | R[1]          ]
    [ A[8]          | R[2]          ]
    [ A[2]          | R[3]          ]
    [ A[9]          | R[7]          ]
    [ A[7]          | R[8]          ]
    [ VPP[1]        | R[9]          ]
    [ VSS[10]       | T[1]          ]
    [ A[11]         | T[2]          ]
    [ PAR           | T[3]          ]
    [ NC            | T[7]          ]
    [ A[13]         | T[8]          ]
    [ VDD[9]        | T[9]          ]

  val channel-A = Ref("UB")
  val channel-B = Ref("LB")
  val ctl-A     = Ref("CTL-A")
  val ctl-B     = Ref("CTL-B")
  val pwr       = Ref("PWR")

  val box-params = BoxSymbolParams(
    show-grid = false
  )

  val box = BoxSymbol(self, params = box-params)

  for (c in [channel-A channel-B], i in 0 to false) do :
    for j in 0 to 8 do :
      set-bank(c, DQ[i * 8 + j])
      set-side(Left, DQ[i * 8 + j])

  for sig in pins(LDQS) do :
    set-bank(channel-A, sig)
    set-side(Right, sig)
  for sig in pins(UDQS) do :
    set-bank(channel-B, sig)
    set-side(Right, sig)

  for i in pins(A) do :
    set-bank(ctl-A, i)
    set-side(Left, i)
  for a in pins(BA) do :
    set-bank(ctl-A, a)
  for a in pins(BG) do :
    set-bank(ctl-A, a)
  for a in pins(CK) do :
    set-bank(ctl-A, CK)
  set-side(Right, BA)
  set-side(Right, BG)
  set-side(Right, CK)

  set-bank(ctl-A, CAS_n, CKE, RAS_n, WE_n)
  set-side(Right, CAS_n, CKE, RAS_n, WE_n)
  set-bank(ctl-B, ACT_n, ALERT_n, CS_n, ODT, PAR, TEN, ZQ)
  set-side(Left, ACT_n, ALERT_n, CS_n, ODT, PAR, TEN, ZQ)


  set-bank(pwr, VDDQ, VDD, VREFCA, VSSQ, VSS)
  set-side(Up, VDDQ, VDD)
  set-side(Down, VSSQ, VSS)
  set-side(Left, VREFCA)


  assign-symbols(
    ctl-A     => box,
    ctl-B     => box,
    pwr       => box,
    channel-A => box,
    channel-B => box,
  )

  val pkg = BGA(
    num-leads = 96,
    lead-diam = 0.47,
    lead-numbering = Grid-Numbering(16, 9),
    package-body = PackageBody(
      width = 10.0 +/- 0.1
      length = 13.5 +/- 0.1
      height = 1.1 +/- 0.1
      ),
    pad-planner = Perimeter-Matrix-Planner(
      rows = 16,
      columns = 9,
      pitch = Dims(0.8, 0.8),
      inactive = [PadIsland(1 to 16, 4 to 7)]
      )
  )
  assign-landpattern(pkg)

;   for i in 0 to 4 do :
;     diff-pin-model(self.RCK_c[i], self.RCK_t[i], delay = typ(1.0e-15) loss = typ(0.1))
;     diff-pin-model(self.WCK_c[i], self.WCK_t[i], delay = typ(1.0e-15) loss = typ(0.1))

;   for i in 0 to 4 do :
;     for j in 0 to 10 do :
;       pin-model(self.DQp[j][i]) = PinModel(typ(1.0e-15), typ(0.1))
;     for j in 0 to 5 do :
;         pin-model(self.CA[j][i]) = PinModel(typ(1.0e-15), typ(0.1))
;     pin-model(self.DQE[i]) = PinModel(typ(1.0e-15), typ(0.1))
;     pin-model(self.ERR[i]) = PinModel(typ(1.0e-15), typ(0.1))
;   pin-model(self.RESET_n) = PinModel(typ(1.0e-15), typ(0.1))

view(ddr4-mem-ic)