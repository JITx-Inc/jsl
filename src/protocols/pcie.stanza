#use-added-syntax(jitx)
defpackage jsl/protocols/pcie:
  import core
  import jitx
  import jitx/commands

  import jsl/bundles
  import jsl/errors
  import jsl/si/helpers
  import jsl/si/couplers
  import jsl/pin-assignment

doc: \<DOC>
@brief PCI-E definition
PCI-E is a serial communication supporting high speed data links
@see https://en.wikipedia.org/wiki/PCI_Express
<DOC>

doc: \<DOC>
@brief PCI-E Generation enums
This is a fixed list of possible generation definitions for PCIe
Can be extended if needed to include PCIE-V3.1, for example
@see https://en.wikipedia.org/wiki/PCI_Express
<DOC>

public pcb-enum jsl/protocols/pcie/PCIeVersion:
  PCIE-V1
  PCIE-V2
  PCIE-V3
  PCIE-V4
  PCIE-V5
  PCIE-V6
  PCIE-V7

doc: \<DOC>
@brief PCI-E Width enums
This is a fixed list of possible lane widths for PCIe
@see https://en.wikipedia.org/wiki/PCI_Express
<DOC>

public pcb-enum jsl/protocols/pcie/PCIeWidth:
  PCIe-x1
  PCIe-x2
  PCIe-x4
  PCIe-x8
  PCIe-x16
  PCIe-x32

public defn PCIe-enum-to-int (en:PCIeWidth) -> Int:
  switch(en) :
    PCIe-x1  :  1
    PCIe-x2  :  2
    PCIe-x4  :  4
    PCIe-x8  :  8
    PCIe-x16 : 16
    PCIe-x32 : 32
    ; else : throw $ Exception("Invalid Lane Configuration for PCIe Bundle")

doc: \<DOC>
@brief PCI-E Bundle
The Data Bundle consists of a number (1 or more) of RX and TX pairs (1 RX/TX pair set = 1 lane)
and it also includes a refclk (100MHz) differential pair
@param lanes The number of lanes to be configured for this bundle.
@see https://en.wikipedia.org/wiki/PCI_Express
<DOC>

; for the future
; P/N swapping is ok per pair
; all lanes being swapped is ok as well
; this should be handled at the component level

public pcb-bundle pcie (lanes:Int) :
  name = "PCI-E"
  description = "PCI-E Serial Communications Link"
  port control : pcie-control
  port data : pcie-data(lanes)

doc: \<DOC>
@brief PCI-E Data Bundle
The Data bundle consists of a number (1 or more) of RX and TX pairs (1 RX/TX pair set = 1 lane)
and it also includes a refclk (100MHz) differential pair.
@param lanes The number of lanes in the bundle.
@see https://en.wikipedia.org/wiki/PCI_Express
<DOC>

public pcb-bundle pcie-data (lanes:Int) :
  name = "PCI-E Data"
  description = "PCI-E Serial Communications Link Data"
  port rx : diff-pair[lanes] 
  port tx : diff-pair[lanes] 
  port refclk : diff-pair

doc: \<DOC>
@brief PCI-E Control bundle
PCI-E is a serial communication supporting high speed data links
@see https://en.wikipedia.org/wiki/PCI_Express
<DOC>

public pcb-bundle pcie-control :
  name = "PCI-E Control"
  description = "PCI-E Serial Communications Link Control"
  pin PEWAKE#
  pin PRSNT#          ; hot plug detection
  pin PERST#          ; PCI-E Reset signal
  pin CLKREQ#         ; clock request


doc: \<DOC>
@brief connect-pcie-tx-rx()
This function partially connects a portion of two pcie bundles together by
connecting the tx pairs on the first bundle to the rx pairs on the second bundle.
@param sw The intra-pair skew value for the differential signals being connected.
@param ml The maximum loss for all differential signals being connected.
@param cap Optional DC blocking capacitor to be inserted between the TX and RX signal ends. Note that 
there are 2 blocking caps inserted, one on each of the pair of P,N signals. Providing a capacitor is often
called for between 2 components on the same board, for example. If no capacitor is provided, 
then the signals are connected straight through. This usage is valid for a connection between a 
connector TX pair and an any RX pair. The capacitor needs to have pin models applied to its pins 
in order for the overall skew and loss values to be respected.
<DOC>

public defn connect-pcie-tx-rx (sw:Toleranced, ml:Double, cap:Instantiable|False, x:JITXObject, y:JITXObject) : 
  inside pcb-module :
    defn constraint (a:JITXObject, b:JITXObject) :
      skew-window(sw, a => b)
      max-loss(ml, a => b)

    for i in indices(x.data.tx) do :
      match(cap) :
        (c:Instantiable) : 
          inst bl-cap : dp-coupler(c)
          require tx1 : dual-pair from bl-cap
          ; need to have pin-model()'s set on the cap pins...
          topo-net(x.data.tx[i], tx1.A)
          topo-net(tx1.B, y.data.rx[i])
        (f:False) : 
          topo-net(x.data.tx[i], y.data.rx[i])

      constraint(x.data.tx[i], y.data.rx[i])

doc: \<DOC>
@brief connect-pcie-control
This function connects two equivalent pcie control sub-bundles together without constraints.
<DOC>

public defn connect-pcie-control (x:JITXObject, y:JITXObject) : 
  inside pcb-module :
    net (x.control y.control)

doc: \<DOC>
@brief pcie-get-skew-loss-vals() returns curated values for skew and loss
Is a helper function that returns the bounds on the intra-pair
skew timing and maximum loss as expected by the particular standard targeted by 
the user.The values returned are a toleranced value with upper/lower limits for the
intra-pair skew and the maximum loss as a double representing dB. Some defaults in the 
table are derived from the references listed below. 
https://pcisig.com/pci-express%C2%AE-50-architecture-channel-insertion-loss-budget-0

There is also a very loose lane to lane skew spec for different lane rates:
Parameter	       2.5 GT/s	5.0 GT/s	8.0 GT/s	16.0 GT/s Unit
Lane to Lane Skew	20	     8	        6	          5 ns

Calculating the intra-pair skew distance to time correspondence depends on the material.
tpd 147 ps/in 170 ps/in -> 147 fs/mil to 170 fs/mil
@  5 mils spec'ed that is a intra-pair skew of 750 fs to 850 fs
@ 10 mils spec'ed that is a intra-pair skew of 1.50 ps to 1.70 ps
for system board skew match: page 2 of @see https://docs.broadcom.com/doc/pcie-pcb-layout-review

Another good reference:
@see https://community.nxp.com/pwmxy87654/attachments/pwmxy87654/powerquicc/2284/1/AN307_TP_HARDWARE_DESIGN_PCI_SMGIII.pdf
<DOC>

public defn pcie-get-skew-loss-vals (gen:jsl/protocols/pcie/PCIeVersion) -> [Toleranced, Double]:
  switch(gen) :
    PCIE-V1 : [0.0 +/-  1.0e-12,  12.0]  ;   2.5 GT/s
    PCIE-V2 : [0.0 +/-  1.0e-12,  12.0]  ;   5.0 GT/s
    PCIE-V3 : [0.0 +/-  1.0e-12,  10.3]  ;   8.0 GT/s
    PCIE-V4 : [0.0 +/- 0.850e-12, 13.5]  ;  16.0 GT/s
    PCIE-V5 : [0.0 +/- 0.850e-12, 16.0]  ;  32.0 GT/s
    PCIE-V6 : [0.0 +/- 0.850e-12, 16.0]  ;  64.0 GT/s
    PCIE-V7 : [0.0 +/- 0.850e-12, 16.0]  ; 128.0 GT/s

doc: \<DOC>
@brief pcie-get-trace-impedance function returns the differential impedance specified by the standard
This is a helper function that returns the expected differential
trace impedance for the particular generation of the PCIe standard that the user wants to 
use. The value returned is a toleranced value with upper/lower limits for the impedance.
<DOC>

public defn pcie-get-trace-impedance (gen:jsl/protocols/pcie/PCIeVersion) -> Toleranced :
  switch(gen) :
    PCIE-V1 : 100.0 +/- (5 %)  ;   2.5 GT/s
    PCIE-V2 : 100.0 +/- (5 %)  ;   5.0 GT/s
    PCIE-V3 :  85.0 +/- (5 %)  ;   8.0 GT/s
    PCIE-V4 :  85.0 +/- (5 %)  ;  16.0 GT/s
    PCIE-V5 :  85.0 +/- (5 %)  ;  32.0 GT/s
    PCIE-V6 :  85.0 +/- (5 %)  ;  64.0 GT/s
    PCIE-V7 :  85.0 +/- (5 %)  ; 128.0 GT/s

doc: \<DOC>
The pcie-apply-routing-structure() is a function that applies the provided DifferentialRoutingStructure
to the start and endpoints given. Note that both start and end points needs to be differential bundles
which are connected to physical component pins either directly or via pin assignment.
<DOC>

public defn pcie-apply-routing-structure (rs:DifferentialRoutingStructure, x:JITXObject, y:JITXObject) : 
  inside pcb-module :
    diff-structure(rs, x => y)
