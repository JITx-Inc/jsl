#use-added-syntax(jitx)
defpackage jsl/examples/symbols/capacitor:
  import core
  import collections
  import jitx
  import jitx/commands

  import jsl/design/settings
  import jsl/landpatterns/packages
  import jsl/landpatterns/two-pin/SMT
  import jsl/landpatterns/SOIC
  import jsl/examples/landpatterns/board

  import jsl/symbols/SymbolDefn
  import jsl/symbols/capacitors


val board-shape = RoundedRectangle(50.0, 50.0, 0.25)


pcb-component test-non-pol-cap:

  pin-properties :
    [pin:Ref | pads:Ref ... | side:Dir | bank:Int]
    [p[1] | p[1] | Up |  0]
    [p[2] | p[2] | Down | 0]

  val symb = CapacitorSymbol()
  assign-symbol(create-symbol(symb))
  val chip-def = chips["1206"]
  val pkg = SMT-Chip(
    chip-def,
    density-level = DensityLevelC
  )

  val lp = create-landpattern(pkg)
  assign-landpattern(lp)

pcb-component test-pol-cap:

  pin-properties :
    [pin:Ref | pads:Ref ... | side:Dir | bank:Int]
    [p[1] | p[1] | Up |  0]
    [p[2] | p[2] | Down | 0]

  val symb = PolarizedCapacitorSymbol()
  assign-symbol(create-symbol(symb))

  val chip-def = chips["1206"]
  val pkg = SMT-Chip(
    chip-def,
    density-level = DensityLevelC
  )

  val lp = create-landpattern(pkg)
  assign-landpattern(lp)

pcb-component test-pol-cap-2:

  pin-properties :
    [pin:Ref | pads:Ref ... | side:Dir | bank:Int]
    [p[1] | p[1] | Up |  0]
    [p[2] | p[2] | Down | 0]

  val params = PolarizedCapacitorSymbolParams(style = Polarized-Curved-Style)
  val symb = PolarizedCapacitorSymbol(params = params)
  assign-symbol(create-symbol(symb))

  val chip-def = chips["1206"]
  val pkg = SMT-Chip(
    chip-def,
    density-level = DensityLevelC
  )

  val lp = create-landpattern(pkg)
  assign-landpattern(lp)



pcb-module test-design:
  inst C1 : test-non-pol-cap
  inst C2 : test-pol-cap
  inst C3 : test-pol-cap-2

; Set the top level module (the module to be compile into a schematic and PCB)
set-current-design("Capacitor-Symb-TEST")
set-rules(default-rules)
set-board(default-board(board-shape))

set-main-module(test-design)

; Use any helper function from helpers.stanza here. For example:
; run-check-on-design(my-design)

; View the results
view-board()
view-schematic()