doc: \<DOC>
@brief DDR 4

DDR4 is a high speed memory protocol 
@see https://en.wikipedia.org/wiki/DDR4_SDRAM

This functions and definitions in this file support defining DDR4
connections between microprocessors and memories in a board design.

<DOC>
#use-added-syntax(jitx)
defpackage jsl/protocols/memory/ddr4:
  import core
  import jitx
  import jitx/commands

  import jsl/bundles
  import jsl/errors
  import jsl/ensure
  import jsl/si
  import jsl/pin-assignment

doc: \<DOC>
@brief ddr4 width enums
This is a fixed list of possible lane widths for ddr4 memory channels
<DOC>
public pcb-enum jsl/protocols/memory/ddr4-width:
  DDR4-x4
  DDR4-x8
  DDR4-x16

doc: \<DOC>
@brief ddr4 Width enum conversion to integers
This converts possible lane widths for ddr4 memory channels into the corresponding integer
<DOC>
public defn ddr4-width-enum-to-int (en:jsl/protocols/memory/ddr4-width) -> Int:
  switch(en) :
    DDR4-x4  :  4
    DDR4-x8  :  8
    DDR4-x16 : 16

doc: \<DOC>
@brief ddr4 topology
This is a fixed list of possible topologies for ddr4 memories
<DOC>
public pcb-enum jsl/protocols/memory/ddr4-topology:
  FlyBy
  ClamShell

doc: \<DOC>
@brief ddr4 rank Options
This is a fixed list of possible rank options for ddr4 implementations
<DOC>
public pcb-enum jsl/protocols/memory/ddr4-rank:
  SingleRank
  DualRank
  QuadRank

doc: \<DOC>
@brief ddr4 rank enum conversion to integers
This converts possible rank options for ddr4 memory channels into the corresponding integer
<DOC>
public defn ddr4-rank-enum-to-int (en:jsl/protocols/memory/ddr4-rank) -> Int:
  switch(en) :
    SingleRank : 1
    DualRank   : 2
    QuadRank   : 4

doc: \<DOC>
@brief ddr4 Bundle
One ddr4 bundle consists of the connections between an integrated memory controller and
one or more ddr4 memory chips/DIMMs.
@member control Control channel for ddr4
@member data Data channels for ddr4 depending on the width
@member topology Topology of the DDR4 connection (FlyBy or ClamShell)
@member rank Rank configuration of the DDR4 memory (SingleRank, DualRank, or QuadRank)
<DOC>

public defn ddr4 (width:jsl/protocols/memory/ddr4-width -- topology:jsl/protocols/memory/ddr4-topology = FlyBy rank:jsl/protocols/memory/ddr4-rank = SingleRank) :
  ; Ensure the width is valid
  ensure-enum-value(width, [DDR4-x4, DDR4-x8, DDR4-x16])
  ; Ensure the topology is valid
  ensure-enum-value(topology, [FlyBy, ClamShell])
  ; Ensure the rank is valid
  ensure-enum-value(rank, [SingleRank, DualRank, QuadRank])
  ; Ensure the width matches the rank
  if width == DDR4-x4 and rank != SingleRank:
    fatal("DDR4-x4 is only supported in SingleRank configuration")
  if width == DDR4-x16 and rank == QuadRank:
    fatal("DDR4-x16 is not supported in QuadRank configuration")
  ddr4-b(ddr4-width-enum-to-int(width), topology, ddr4-rank-enum-to-int(rank))


public pcb-bundle ddr4-b (width:Int topology:jsl/protocols/memory/ddr4-topology, rank:Int) :
  name = "DDR4"
  description = "Double Data Rate 4 Dynamic Random-Access Memory protocol"
  port data    : ddr4-data-channel(width) ;
  port control : ddr4-control-channel(rank) ; covers all CMD/CTRL/ADDR

public pcb-bundle ddr4-data-channel (width:Int):
  port DQ  : pin[width];
  port DQS : diff-pair ;

public pcb-bundle ddr4-control-channel (rank:Int):
  ; how do I use rank here? Needs some work...
  port CK      : diff-pair
  port CKE     : pin
  port A       : pin[[0 to 14, 17]]
  port ACT_n   : pin
  port BG      : pin[2]
  port BA      : pin[2]
  port CS_n    : pin
  port RAS_n   : pin ; aka A[16]
  port CAS_n   : pin ; aka A[15]
  port WE_n    : pin ; aka A[14]
  port RESET_n : pin
  port ODT     : pin
  port PAR     : pin


doc: \<DOC>
@brief Curated values for skew and loss of DDR4 channel
This is a helper function that returns the bounds on the intra-pair
skew timing and maximum loss as expected by the particular standard targeted by
the user. The values returned are a toleranced value with upper/lower limits for the
intra-pair skew and the maximum loss as a double representing dB. Some defaults in the
table are derived from the references listed below.

1. Skew match between A[17] A[13:0] and CK.P is 0.0 +/- 20e-12 (20 ps) Intel or -50ps, -34ps AMD
2. Skew match between RAS_n, CAS_n, WE_n, and CK.P is 0.0 +/- 20e-12 (20 ps) Intel or -50ps, -34ps AMD
3. Skew match between BA[1:0], BG[1:0] and CK.P is 0.0 +/- 20e-12 (20 ps) Intel or -50ps, -34ps AMD
4. Skew match between ACT_n, CKE, CS_n, ODT, PAR and CK.P is 0.0 +/- 20e-12 (20 ps) Intel or -50ps, -34ps AMD
5. Skew match between CMD/ADDR/CTRL within a channel is 0.0 +/- 20e-12 (20 ps) Intel
6. Skew match of CK is 0.0 +/- 1.0e-12 (1 ps) Intel or 0.0 +/- 2.0e-12 (2 ps) AMD
7. Skew match of DQS is 0.0 +/- 1.0e-12 (1 ps) Intel or 0.0 +/- 2.0e-12 (2 ps) AMD
8. Skew match between DQ and DQS.P within a byte lane is 0.0 +/- 3.5e-12 (3.5 ps) Intel or 0.0 +/- 100.0e-12 (100 ps) AMD 
9. Skew match between CK.P and DQS.P is -85 ps to 935 ps Intel or -149 ps to +1796 ps AMD

Intel specs derived from:
https://www.intel.com/content/www/us/en/docs/programmable/683216/23-2-2-7-1/skew-matching-guidelines-for-ddr4-discrete.html
AMD specs derived from:
https://docs.amd.com/r/en-US/ug863-versal-pcb-design/Timing-Constraint-Rules-for-DDR4-Signals
for the DDR4 component table

Calculating the distance to time correspondence depends on the board material.
Example:
  tpd 147 ps/in 170 ps/in -> 147 fs/mil to 170 fs/mil
  @  5 mils spec'ed that is a intra-pair skew of 735 fs to 850 fs depending on the material characteristics
  @ 10 mils spec'ed that is a intra-pair skew of 1.47 ps to 1.70 ps depending on the material characteristics
<DOC>

doc: \<DOC>
@brief Returns address mapping depending on the topology for each address pin that can be permuted
Memory Controller Pin	| DRAM Pin (Non-Mirrored)	| DRAM Pin (Mirrored)
A3	| A3	| A4
A4	| A4	| A3
A5	| A5	| A6
A6	| A6	| A5
A7	| A7	| A8
A8	| A8	| A7
A11	| A11 | A13
A13	| A13 | A11
BA0	| BA0 | BA1
BA1	| BA1 | BA0 ; this is optional depending on the memory size/rank
BG0 | BG0 | BG1
BG1 | BG1 | BG0 ; this is optional depending on the memory size/rank
<DOC>
public defn DDR4-Topology-address-map (a:JITXObject topo:jsl/protocols/memory/DDR4-Topology) -> JITXObject:
  switch(a) :
    A[3] : if topo == jsl/protocols/memory/DDR4-Topology:Mirrored :
              A[4]
            else :
              A[3]
    A[4] : if topo == jsl/protocols/memory/DDR4-Topology:Mirrored :
              A[3]
            else :
              A[4]
    A[5] : if topo == jsl/protocols/memory/DDR4-Topology:Mirrored :
              A[6]
            else :
              A[5]
    A[6] : if topo == jsl/protocols/memory/DDR4-Topology:Mirrored :
              A[5]
            else :
              A[6]
    A[7] : if topo == jsl/protocols/memory/DDR4-Topology:Mirrored :
              A[8]
            else :
              A[7]
    A[8] : if topo == jsl/protocols/memory/DDR4-Topology:Mirrored :
              A[7]
            else :
              A[8]
    A[11] : if topo == jsl/protocols/memory/DDR4-Topology:Mirrored :
              A[13]
            else :
              A[11]
    A[13] : if topo == jsl/protocols/memory/DDR4-Topology:Mirrored :
              A[11]
            else :
              A[13]
    BA[0] : if topo == jsl/protocols/memory/DDR4-Topology:Mirrored :
              BA[1]
            else :
              BA[0]
    BA[1] : if topo == jsl/protocols/memory/DDR4-Topology:Mirrored :
              BA[0]
            else :
              BA[1]
    BG[0] : if topo == jsl/protocols/memory/DDR4-Topology:Mirrored :
              BG[1]
            else :
              BG[0]
    BG[1] : if topo == jsl/protocols/memory/DDR4-Topology:Mirrored :
              BG[0]
            else :
              BG[1]
    else :
      println("Attempting to use unknown address (%_) for mapping" % [a])
      false


doc: \<DOC>
@brief Differential impedance specified by the DDR4 standard
This is a helper function that returns the expected differential
trace impedance for the standard.

@return Upper/lower limits for the impedance.
<DOC>
public defn ddr4-get-trace-impedance () -> [Toleranced, Toleranced, Toleranced, Toleranced] :
  [ 90.0 +/- (5 %) ; CLK
   100.0 +/- (5 %) ; DQS
    50.0 +/- (5 %) ; DQ
    45.0 +/- (5 %)]; CMD/CTRL/ALERT


doc: \<DOC>
DDR4 SI Constraint Type

This derives from the whole data lane constraint as most of the dq signals 
are single-ended but referenced to the dqs pairs. The remainder of the signals are
constrained to the CK pair. The constraints are:

    0.0 +/-    1.0e-12   ; Intrapair skew match of CK is +/- 1 ps
    0.0 +/-    1.0e-12   ; Intrapair skew match of DQS is +/- 1 ps
  -85.0e-12 +935.0e-12   ; Skew match between CK.P and DQS.P -85 ps to 935 ps
    0.0 +/-    3.5e-12   ; Skew match between DQ and DQS.P within a byte lane is +/- 3.5 ps
    0.0 +/-   20.0e-12   ; Skew match between A[17] A[13:0] and CK.P +/- 20 ps
    0.0 +/-   20.0e-12   ; Skew match between RAS_n, CAS_n, WE_n, and CK.P is +/- 20 ps
    0.0 +/-   20.0e-12   ; Skew match between BA[1:0], BG[1:0] and CK.P is +/- 20 ps
    0.0 +/-   20.0e-12   ; Skew match between CMD/ADDR/CTRL within a channel is +/- 20 ps
    0.0 +/-   20.0e-12   ; Skew match between ACT_n, CKE, CS_n, ODT, PAR and CK.P is +/- 20 ps


The `constrain` function for this type expects two compatible `ddr4-b` types.
<DOC>
public defstruct DDR4-Constraint <: SI-Constraint :
  doc: \<DOC>
  CK Intra-pair Timing Skew Constraint in Seconds
  <DOC>
  skew-ck:Toleranced with :
    default => 0.0 +/- 1.00e-12
  doc: \<DOC>
  DQS Intra-pair Timing Skew Constraint in Seconds
  <DOC>
  skew-dqs:Toleranced with :
    default => 0.0 +/- 1.00e-12
  doc: \<DOC>
  CK.P to DQS.P Inter-signal Timing Skew Constraint in Seconds
  <DOC>
  skew-ck-dqs:Toleranced with :
    default => min-max(-85.0e-12 935.0e-12)
  doc: \<DOC>
  DQ to DQS Inter-pair Timing Skew Constraint in Seconds
  <DOC>
  skew-dq-dqs:Toleranced with :
    default => 0.0 +/- 3.50e-12
  doc: \<DOC>
  ADDR to CK Inter-pair Timing Skew Constraint in Seconds
  <DOC>
  skew-addr-ck:Toleranced with :
    default => 0.0 +/- 20.0e-12
  doc: \<DOC>
  RAS_n, CAS_n, WE_n to CK.P Inter-pair Timing Skew Constraint in Seconds
  <DOC>
  skew-ras-cas-we-ck:Toleranced  with:
    default =>  0.0 +/- 20.0e-12
  doc: \<DOC>
  BA[1:0], BG[1:0] to CK.P Inter-pair Timing Skew Constraint in Seconds
  <DOC>
  skew-ba-bg-ck:Toleranced  with:
    default =>  0.0 +/- 20.0e-12
  doc: \<DOC>
  ACT_n, CKE, CS_n, ODT, PAR to CK.P Inter-pair Timing Skew Constraint in Seconds
  <DOC>
  skew-misc-ck:Toleranced  with:
    default =>  0.0 +/- 20.0e-12
  doc: \<DOC>
  CMD, ADDR, CTRL Inter-pair Timing Skew Constraint in Seconds
  <DOC>
  skew-cmd-addr-ctrl:Toleranced  with:
    default =>  0.0 +/- 100.0e-12
  doc: \<DOC>
  Diff-Pair Max Loss Limit Constraint in dB
  <DOC>
  loss:Double with:
    ensure => ensure-positive!,
    default => 5.0
  doc: \<DOC>
  Differential Routing Structure for CK  [90.0 +/- (5 %)]
  <DOC>
  diff-ck-rs:DifferentialRoutingStructure
  doc: \<DOC>
  Differential Routing Structure for DQS [100.0 +/- (5 %)]
  <DOC>
  diff-dqs-rs:DifferentialRoutingStructure
  doc: \<DOC>
  Single-Ended Routing Structure for each DQ signal [50.0 +/- (5 %)]
  <DOC>
  se-dq-rs:RoutingStructure
  doc: \<DOC>
  Single-Ended Routing Structure for all other SE signal [45.0 +/- (5 %)]
  <DOC>
  se-rs:RoutingStructure
with:
  keyword-constructor => true
  constructor => #DDR4-Constraint


doc: \<DOC>
Constructor for the DDR4 Link Constraint
@param ck-rs Differential Routing Structure constraints for CK signals
@param dqs-rs Differential Routing Structure constraints for DQS signals
@param dq-rs Routing Structure constraints for DQ signals
@param rs Routing Structure constraints for remaining signals (CMD/CTRL/ADDR)
<DOC>
public defn DDR4-Constraint (
    ck-rs:DifferentialRoutingStructure
    dqs-rs:DifferentialRoutingStructure
    dq-rs:RoutingStructure
    rs:RoutingStructure ) -> DDR4-Constraint:
  DDR4-Constraint(
    diff-ck-rs = ck-rs
    diff-dqs-rs = dqs-rs
    se-dq-rs = dq-rs
    se-rs = rs
  )

doc: \<DOC>
Constrain a DDR4 Link assuming that it is a discrete link (not DIMM)

@param cst Constraint Object
@param src Source End Point - must be of `ddr4-b` type
@param dst Destination End Point - must be of `ddr4-b` type and match
the parameterization of `src`, including width.
<DOC>
public defmethod constrain (cst:DDR4-Constraint, src:JITXObject, dst:JITXObject) -> False :
  inside pcb-module:
    val cst-ck  = DiffPair-Constraint(skew = skew-ck(cst) loss = loss(cst) route-struct = diff-ck-rs(cst))
    val cst-dqs = DiffPair-Constraint(skew = skew-dqs(cst) loss = loss(cst) route-struct = diff-dqs-rs(cst))

    val guide-ck  = src.control.CK.P => dst.control.CK.P
    val guide-dqs = src.data.DQS.P => dst.data.DQS.P

    ; val guide-reset = src.control.RESET_n => dst.control.RESET_n
    ; structure(guide-reset) = se-route-struct(cst)

    for i in 0 to 4 do :
      diffpair-constrain(cst-rck, src.data[i].RCK  dst.data[i].RCK)
      diffpair-constrain(cst-wck, src.data[i].WCK  dst.data[i].WCK)
      timing-window(skew-rck-wck(cst) guide-rck src.data[i].RCK.P => dst.data[i].RCK.P)
      timing-window(skew-rck-wck(cst) guide-rck src.data[i].WCK.P => dst.data[i].WCK.P)
      val guide-rck-chan = src.data[i].RCK.P => dst.data[i].RCK.P
      val guide-wck-chan = src.data[i].WCK.P => dst.data[i].WCK.P
      val guide-dq = src.data[i].DQ[0] => dst.data[i].DQ[0]
      val dq-bus = to-tuple $ cat{_, [src.data[i].DQE => dst.data[i].DQE]} $ for j in 0 to 10 seq : src.data[i].DQ[j] => dst.data[i].DQ[j]
      timing-window(skew-rck-dq(cst)    guide-rck-chan topos = dq-bus)
      timing-window(skew-wck-dq(cst)    guide-wck-chan topos = dq-bus)
      timing-window(skew-dq(cst)        guide-dq       topos = dq-bus)
      timing-window(skew-err-wck(cst),  guide-wck-chan src.data[i].ERR => dst.data[i].ERR)
      val ca-bus = to-tuple $ for j in 0 to 5 seq : src.data[i].CA[j] => dst.data[i].CA[j]
      val guide-ca = src.data[i].CA[0]   => dst.data[i].CA[0]
      timing-window(skew-wck-ca(cst), guide-wck-chan  topos = ca-bus)
      timing-window(skew-rst-ca(cst), guide-reset     topos = ca-bus)
      timing-window(skew-ca(cst),     guide-ca        topos = ca-bus)

      structure(src.data[i].DQ, dst.data[i].DQ) = se-route-struct(cst)
      structure(src.data[i].DQE, dst.data[i].DQE) = se-route-struct(cst)
      structure(src.data[i].CA, dst.data[i].CA) = se-route-struct(cst)
      structure(src.data[i].ERR, dst.data[i].ERR) = se-route-struct(cst)
      max-loss(loss(cst), src.data[i].DQ  => dst.data[i].DQ)
      max-loss(loss(cst), src.data[i].DQE => dst.data[i].DQE)
      max-loss(loss(cst), src.data[i].CA  => dst.data[i].CA)
      max-loss(loss(cst), src.data[i].ERR => dst.data[i].ERR)

public defn connect-DDR4 (src:JITXObject dst:JITXObject diff-rs:DifferentialRoutingStructure rs:RoutingStructure) :
  inside pcb-module :
    val ddr4-cst = DDR4-Constraint(diff-rs, rs)
    constrain-topology(src, dst, ddr4-cst)
