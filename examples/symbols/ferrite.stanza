#use-added-syntax(jitx)
defpackage jsl/examples/symbols/ferrite:
  import core
  import jitx
  import jitx/commands

  import jsl
  import jsl/examples/landpatterns/board


pcb-component test-SMT-ferrite:
  mpn = "BLM18KG331SN1D"
  pin-properties :
    [pin:Ref | pads:Ref ... | side:Dir]
    [p[1] | p[1] | Up ]
    [p[2] | p[2] | Down]

  val symb = FerriteSymbol()
  assign-symbol(create-symbol(symb))

  val pkg = get-chip-pkg("1206")
  val lp = create-landpattern(pkg)
  assign-landpattern(lp)

pcb-module test-design:
  inst F1 : test-SMT-ferrite
  place(F1) at loc(0.0, 0.0) on Top


val board-shape = RoundedRectangle(50.0, 50.0, 0.25)

; Set the top level module (the module to be compile into a schematic and PCB)
set-current-design("Ferrite-Symb-TEST")
set-rules(default-rules)
set-board(default-board(board-shape))

set-main-module(test-design)

; Use any helper function from helpers.stanza here. For example:
; run-check-on-design(my-design)

; View the results
view-board()
view-schematic()