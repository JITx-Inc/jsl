#use-added-syntax(jitx)
defpackage jsl/landpatterns/BGA/pads:
  import core
  import jitx
  import jitx/commands
  import jsl/design/settings
  import jsl/geometry/basics
  import jsl/geometry/box
  import jsl/landpatterns/pads

doc: \<DOC>
@title BGA Pad Configuration
@brief Tools for configuring Ball Grid Array (BGA) pad shapes and features

This module provides the core types and functions needed to define BGA pad 
configurations, including:

- Pad type definitions (SMD vs NSMD)
- IPC-compliant copper pad sizing
- Configuration of pad features (copper, soldermask, paste)
- Pad shape generation utilities

@see BGA-PadPlanner for pad placement and population
@see PackageBody for package body definition
@see IPC-7351B for industry standard recommendations
<DOC>

doc: \<DOC>
@desc BGA Pad Type - SMD vs NSMD

SMD (SolderMaskDefined):
- Soldermask opening is smaller than copper pad
- Better for fine pitch BGAs (<0.5mm)
- Provides better pad adhesion
- Also called "Non-Collapsible"

NSMD (NonSolderMaskDefined): 
- Soldermask opening is larger than copper pad
- Better for larger pitch BGAs
- Provides better solder joint reliability
- Also called "Collapsible"

@see IPC-7351B Section 3.4.2 for detailed recommendations
<DOC>
public defenum BGAPadType:
  SolderMaskDefined
  NonSolderMaskDefined

public defstruct PadConfig :
  doc: \<DOC>
  The copper pad adjustment for BGA packages.
  For NonSolderMaskDefined (NSMD) pads, typically reduce pad size 
  15-25% from ball diameter. For SolderMaskDefined (SMD) pads, 
  typically enlarge 5-15% over ball diameter.

  Value can be:
  - Double: Absolute adjustment in mm
  - Percentage: Relative adjustment to ball size
  <DOC>
  copper-adj:Double|Percentage

  doc: \<DOC>
  The soldermask opening adjustment.
  Typically 1:1 with copper pad size. May be adjusted based
  on BGA pad-type requirements.

  Value can be:
  - Double: Absolute adjustment in mm
  - Percentage: Relative adjustment to ball size
  <DOC>
  mask-adj:Double|Percentage

  doc: \<DOC>
  The paste mask opening adjustment.
  Controls solder paste application for each pad. Can be:
  - Double: Absolute adjustment in mm
  - Percentage: Relative adjustment to ball size
  - PasteMaskStyle: Special paste controls:
    - NominalPasteMask: Uses smaller of copper/mask size
    - NoPasteMask: No paste application
  <DOC>
  paste-adj:Double|Percentage|PasteMaskStyle
with:
  constructor => #PadConfig

doc: \<DOC>
@desc Compute the IPC recommended copper pad adjustment for BGAs

This function generates a `Percentage` value indicating the recommended 
pad expansion or shrinkage from IPC7351.

These values work best for circular or square pads where a percentage 
can be applied equally in all directions. For `Capsule` or `Rectangle` 
pad shapes, these values don't apply well since we don't have tools 
that ratiometrically expand or contract arbitrary shapes.

@param pad-type The type of pad technology to be used - either
  `SolderMaskDefined` or `NonSolderMaskDefined`
@param density-level Indication of board density that determines
  whether minimum, nominal, or maximum material conditions are used
  (DensityLevelA, DensityLevelB, DensityLevelC)

@return A Percentage value that when applied to the ball diameter gives
  the recommended copper pad size per IPC-7351:
  - For NSMD: -25% to -15% reduction
  - For SMD: +5% to +15% expansion

@see https://www.pcblibraries.com/forum/bga-ball-and-ball-pad-on-pcb-can-be-accepted_topic3177.html
<DOC>
public defn ipc-bga-copper (
  pad-type:BGAPadType,
  --
  density-level:DensityLevel = DENSITY-LEVEL
  ) -> Percentage:
  val nsmd? = pad-type is NonSolderMaskDefined
  if nsmd?:
    switch(density-level): ;Collapsing
      DensityLevelA: (-25 %)
      DensityLevelB: (-20 %)
      DensityLevelC: (-15 %)
  else:
    switch(density-level): ; Non-Collapsing
      DensityLevelA: (15 %)
      DensityLevelB: (10 %)
      DensityLevelC: (5 %)

doc: \<DOC>
@desc Construct a PadConfig object using radial adjustments

Creates a configuration for circular pads where adjustments are 
applied radially from the center.

@param copper-R-adj Radial adjustment for copper pad (mm or %)
@param mask-R-adj Radial adjustment for soldermask opening (mm or %)
@param paste-R-adj Radial adjustment for paste mask (mm or % or style)

@return A PadConfig configured with the specified radial adjustments

Default values:
- copper: No adjustment (0.0)
- mask: Same as copper
- paste: NominalPasteMask (smaller of copper/mask)
<DOC>
public defn PadConfig-R (
    --
    copper-R-adj:Double|Percentage = 0.0,
    mask-R-adj:Double|Percentage = copper-R-adj,
    paste-R-adj:Double|Percentage|PasteMaskStyle = NominalPasteMask,
  ):
  #PadConfig(copper-R-adj, mask-R-adj, paste-R-adj)

doc: \<DOC>
@desc Construct a PadConfig object using diameter adjustments

Creates a configuration for circular pads where adjustments are
specified as changes to the diameter.

Default values:
- copper: No adjustment (0.0)
- mask: Same as copper
- paste: NominalPasteMask (smaller of copper/mask)

<DOC>
public defn PadConfig-D (
    --
    copper-D-adj:Double|Percentage = 0.0,
    mask-D-adj:Double|Percentage = copper-D-adj,
    paste-D-adj:Double|Percentage|PasteMaskStyle = NominalPasteMask
  ):
  defn convert-radius (v:Double|Percentage) -> Double|Percentage :
    match(v):
      (x:Double): to-radius(x)
      (y): y

  val [cu-R, mask-R] = map(convert-radius, [copper-D-adj, mask-D-adj]) as [Double, Double]
  val paste-R = match(paste-D-adj):
    (x:Double|Percentage): convert-radius(x)
    (y): y

  #PadConfig(cu-R, mask-R, paste-R)


defn compute-adj (adj:Double|Percentage, copper:Shape) -> Double :
  match(adj):
    (x:Double): x
    (rel-adj:Percentage):
      val bbox = bounds(copper)
      val min-edge = min-width(bbox)
      (min-edge * rel-adj) / 2.0


doc: \<DOC>
@desc This function uses a closure to define a `pcb-pad` for a BGA pad.

The adjustment parameters from {@link type:PadConfig} are designed to
adjust the size of those features from the `ball` shape baseline.

@param ball Originating Shape for the pad. This is typically a circular
projection of the ball diameter of the BGA. This is the pad shape that
results from a 1:1 pad to ball diameter (ie zero adjustments)
@param config Configuration for generating the BGA pad.
@return A pcb-pad definition with appropriate copper, soldermask and paste layers
@snippet Example of a BGA pad configuration

```stanza
val cfg = PadConfig((5 %), (-1 %))
val ball = Circle(to-radius $ 1.0) ; 1mm Diameter
pcb-landpattern bga :
  pad p[1] : build-bga-pad(ball, cfg) at loc(0.0, 0.0)
```
@snip-note 1
This results in a copper pad that is 1.1mm in diameter and a
soldermask opening that 0.98mm in diameter.
<DOC>
public defn build-bga-pad (
  ball:Shape,
  config:PadConfig
  ):
  pcb-pad bga-pad :
    name = "BGA Pad"
    type = SMD

    val c-adj = compute-adj(copper-adj(config), ball)
    val copper = expand-or-shrink(ball, c-adj)
    shape = copper

    val s-adj = compute-adj(mask-adj(config), ball)
    val smask = expand-or-shrink(ball, s-adj)
    make-soldermask(smask)

    match(paste-adj(config)):
      (_:NoPasteMask): false
      (_:NominalPasteMask):
        ; We compute the pastemask as the minimum of either:
        ;  1:1 Copper
        ;   or
        ;  1:1 Soldermask Opening
        ;  Depending on which one is smaller.
        defn size-metric (x):
          area $ bounds(x)

        val paste-sh = if size-metric(copper) < size-metric(smask):
          copper
        else:
          smask

        make-pastemask(paste-sh)
      (paste:Double|Percentage):
        val p-adj = compute-adj(paste, ball)
        val paste-sh = expand-or-shrink(ball, p-adj)
        make-pastemask(paste-sh)

  bga-pad
