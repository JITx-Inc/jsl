doc: \<DOC>
@brief DisplayPort Protocol

DisplayPort is a serial protocol supporting high speed links for video+audio
@see https://en.wikipedia.org/wiki/DisplayPort

This functions and definitions in this file support defining DisplayPort
connections between sources and receivers on a printed circuit board.

## DisplayPort Blocking Capacitors

The DisplayPort specification calls for AC coupling for the data lanes. This is typically
achieved using a blocking capacitor. When connecting two active components, this typically
means blocking caps from `Tx -> Rx` on both sides of the link. When connecting an
active component to a passive component, this typically means adding the blocking caps only on
the `Tx -> Rx` side of the link.

The functions in this module allow you to pass a blocking capacitor as an `Instantiable`.
This component will get instantiated for each leg of the diff-pair. These functions handle
the topology configuration, but the user needs to set a `pin-model` statement on the capacitor component.

<DOC>
#use-added-syntax(jitx)
defpackage jsl/protocols/displayport:
  import core
  import jitx
  import jitx/commands

  import jsl/bundles
  import jsl/errors
  import jsl/si/helpers
  import jsl/si/couplers
  import jsl/pin-assignment


doc: \<DOC>
@brief DisplayPort Generation enums
This is a fixed list of possible generation definitions for DisplayPort
<DOC>

public pcb-enum jsl/protocols/displayport/DPVersion:
  DP1p0
  DP1p1
  DP1p2
  DP1p2a
  DP1p3
  DP1p4
  DP1p4a
  DP2p0
  DP2p1
  DP2p1a

doc: \<DOC>
@brief DisplayPort Bundle
The Data Bundle consists of 4 RX and TX pairs (1 RX/TX pair set = 1 channel)
The Control Bundle consists of AUX channel (differential pair)
<DOC>

; for the future
; P/N swapping is ok per pair
; all lanes being swapped is ok as well
; this should be handled at the component level

public pcb-bundle displayport :
  name = "DisplayPort"
  description = "DisplayPort Digital Display Interface"
  port aux : diff-pair
  port tx : diff-pair[4]
  port rx : diff-pair[4]
  port hpd : pin ; hot plug detect


defn constrain-ch (sw:Toleranced, ml:Double, a:JITXObject, b:JITXObject) :
  skew-window(sw, a => b)
  max-loss(ml, a => b)

doc: \<DOC>
@brief Construct one direction of a DisplayPort channel.

This function will construct the `Tx -> Rx` channel of a DisplayPort bus. The `src` and `dst`
arguments must both be of type `displayport`.

@param sw The intra-pair skew time difference for the differential signals being connected.
@param ml The maximum loss in dB for all differential signals being connected.
@param cap Optional DC blocking capacitor to be inserted between the TX and RX pairs. Note that
there are 2 blocking caps inserted, one on each of the P,N signals of the pair.
@param src This is assumed to be the "Tx" side of the link. This is expected to be a port of `Bundle` type `displayport`
@param dst This is assumed to be the "Rx" side of the link. This is expected to be a port of `Bundle` type `displayport`

<DOC>
public defn connect-displayport-channel (sw:Toleranced, ml:Double, cap:Instantiable|False, src:JITXObject, dst:JITXObject) :
  inside pcb-module:
    for i in indices(src.tx) do :
      match(cap) :
        (c:Instantiable) :
          inst bl-cap : dp-coupler(c)
          require tx1 : dual-pair from bl-cap
          topo-net(src.tx[i], tx1.A)
          topo-net(tx1.B, dst.rx[i])
        (f:False) :
          topo-net(src.tx[i], dst.rx[i])
      constrain-ch(sw, ml, src.tx[i], dst.rx[i])

doc: \<DOC>
@brief Construct aux connection of a DisplayPort channel.

This function will construct the AUX channel of a DisplayPort bus with the appropriate blocking cap. 
The `src` and `dst` arguments must both be of type `displayport`.

@param sw The intra-pair skew time difference for the differential signals being connected.
@param ml The maximum loss in dB for all differential signals being connected.
@param res Optional pull-up resistor to be added to the AUX pair before the capacitor. 
Note that there are 2 resistors added, one on each of the P,N signals of the pair.
@param vdd Optional power supply pin to be used for the optional pull-up resistors.
@param cap Optional DC blocking capacitor to be inserted between the AUX pair. Note that
there are 2 blocking caps inserted, one on each of the P,N signals of the pair.
@param src This is assumed to be the source side of the link. This is expected to be a port of `Bundle` type `displayport`
@param dst This is assumed to be the sink side of the link. This is expected to be a port of `Bundle` type `displayport`

<DOC>
public defn connect-displayport-aux (sw:Toleranced, ml:Double, res:Instantiable|False, vdd:JITXObject|False, cap:Instantiable|False, src:JITXObject, dst:JITXObject) :
  inside pcb-module:
    match(res, vdd, cap) :
      (r:Instantiable, v:JITXObject, c:Instantiable) :
        inst shunt-r : symmetric-shunt(r)
        inst bl-cap : dp-coupler(c)
        require tx1 : dual-pair from bl-cap
        topo-net(src.aux, shunt-r.A)
        topo-net(shunt-r.B, tx1.A)
        topo-net(tx1.B, dst.aux)
        topo-net(shunt-r.COMMON, v)
      (r:Instantiable, v:False, c:Instantiable|False) :
          fatal("Failed to connect DisplayPort AUX pull-up resistors to power supply pin")
      (r:False, v:False, c:Instantiable) :
        inst bl-cap : dp-coupler(c)
        require tx1 : dual-pair from bl-cap
        topo-net(src.aux, tx1.A)
        topo-net(tx1.B, dst.aux)
      (r:False, v:False, c:False) :
        topo-net(src.aux, dst.aux)

    constrain-ch(sw, ml, src.aux, dst.aux)

doc: \<DOC>
@brief Construct the DisplayPort Topology and Constraints

This function constructs the DisplayPort topology and applies constraints
to the channel for intra-pair skew and channel loss.

@param sw The intra-pair skew value for the differential signals being connected.
@param ml The maximum loss for all differential signals being connected.
@param res Optional pull-up resistor to be added to the AUX pair before the capacitor. 
Note that there are 2 resistors added, one on each of the P,N signals of the pair.
@param vdd Optional power supply pin to be used for the optional pull-up resistors.
@param cap-xy Optional DC blocking capacitor to be inserted between the x.tx and y.rx channel. Note that
there are 2 blocking caps inserted, one on each of the pair of P,N signals. The capacitor needs to have pin models applied to its pins
in order for the overall skew and loss values to be respected.
@param cap-yx Optional DC blocking capacitor to be inserted between the y.tx and x.rx signal ends. This capacitor
covers the reverse direction connection between y.TX and x.RX. If the second component was a connector, then typically
no capacitor is inserted between y.TX and x.RX (cap-y-x = false).
@param x This is expected to be a port of `Bundle` type `displayport`
@param y This is expected to be a port of `Bundle` type `displayport`
<DOC>
public defn connect-displayport (sw:Toleranced, ml:Double, res:Instantiable|False, vdd:JITXObject|False, cap-xy:Instantiable|False, cap-yx:Instantiable|False, x:JITXObject, y:JITXObject) :
  inside pcb-module :
    connect-displayport-channel(sw, ml, cap-xy, x, y)
    connect-displayport-channel(sw, ml, cap-yx, y, x)
    connect-displayport-aux(sw, ml, res, vdd, cap-xy, x, y)
    ; no constraints applied to the hot plug detect
    net (x.hpd y.hpd)


doc: \<DOC>
@brief Curated values for skew and loss of DisplayPort Channel
This is a helper function that returns the bounds on the intra-pair
skew timing and maximum loss as expected by the particular standard targeted by
the user.The values returned are a toleranced value with upper/lower limits for the
intra-pair skew and the maximum loss as a double representing dB.

Calculating the intra-pair skew distance to time correspondence depends on the material.
tpd 147 ps/in 170 ps/in -> 147 fs/mil to 170 fs/mil
@  5 mils spec'ed that is a intra-pair skew of 750 fs to 850 fs
@ 10 mils spec'ed that is a intra-pair skew of 1.50 ps to 1.70 ps
<DOC>

public defn displayport-get-skew-loss-vals (gen:jsl/protocols/displayport/DPVersion) -> [Toleranced, Double]:
  switch(gen) :
    DP1p0  : [0.0 +/- 1.0e-12, 15.0] ; 
    DP1p1  : [0.0 +/- 1.0e-12, 15.0] ; 
    DP1p2  : [0.0 +/- 1.0e-12, 15.0] ; 
    DP1p2a : [0.0 +/- 1.0e-12, 15.0] ; 
    DP1p3  : [0.0 +/- 1.0e-12, 15.0] ; 
    DP1p4  : [0.0 +/- 1.0e-12, 15.0] ; 
    DP1p4a : [0.0 +/- 1.0e-12, 15.0] ; 
    DP2p0  : [0.0 +/- 1.0e-12, 15.0] ; 
    DP2p1  : [0.0 +/- 1.0e-12, 15.0] ; 
    DP2p1a : [0.0 +/- 1.0e-12, 15.0] ; 

doc: \<DOC>
@brief Differential impedance specified by the DisplayPort standard
This is a helper function that returns the expected differential
trace impedance for the specified generation of the DisplayPort standard.

@returns Upper/lower limits for the impedance.
<DOC>

public defn displayport-get-trace-impedance () -> Toleranced :
  100.0 +/- (5 %)

doc: \<DOC>
@brief Apply the differential routing structure to a DisplayPort bundle.
The function applies the provided DifferentialRoutingStructure
to all of the differential pairs in the start and endpoints. Note that both start and end points
need to be connected to physical component pins either directly or via pin assignment.
@param x This is expected to be a port of `Bundle` type `displayport`
@param y This is expected to be a port of `Bundle` type `displayport`
<DOC>

public defn displayport-apply-routing-structure (rs:DifferentialRoutingStructure, x:JITXObject, y:JITXObject) :
  inside pcb-module :
    for i in indices(x.tx) do :
      diff-structure(rs, x.tx[i] => y.rx[i])
    for i in indices(y.tx) do :
      diff-structure(rs, y.tx[i] => x.rx[i])
    diff-structure(rs, x.aux => y.aux)
