doc: \<DOC>
@brief Graphics Double Data Rate 7 protocol (GDDR7)

GDDR7 is a high speed memory protocol
@see https://en.wikipedia.org/wiki/GDDR7_SDRAM

This functions and definitions in this file support defining GDDR7
connections between microprocessors and memories in a board design.

The standard defines some of the bounds on the intra-pair
skew timing and maximum loss. The values in this file are toleranced values with
upper/lower limits for the intra-pair skew and the maximum loss as a double
representing dB. Some defaults in this file are derived from the references listed below.

1. Skew match for RCK_P RCK_N is 0.0 +/- 10.0e-15 (10 fs)
2. Skew match for WCK_P WCK_N is 0.0 +/- 10.0e-15 (10 fs)
3. Skew match between RCK and WCK is 0.0 +/- 20.0e-12 (20 ps)
4. Skew match between WCK and CA (per channel A,B,C,D) is 0.0 +/- 20.0e-12 (20 ps)
5. Skew match between RCK and DQ and DQE (per channel A,B,C,D) is 0.0 +/- 20.0e-12 (20 ps)
6. Skew match between WCK and DQ and DQE (per channel A,B,C,D) is 0.0 +/- 20.0e-12 (20 ps)
7. Skew match between DQ and DQE (per channel A,B,C,D) is 0.0 +/- 5.0e-12 (5 ps)
8. Skew match between Reset and CA (per channel A,B,C,D) is 0.0 +/- 100.0e-12 (100ps)
9. Skew match between ERR and WCK (per channel A,B,C,D) is 0.0 +/- 100.0e-12 (100 ps)
10. Skew match between CA (per channel A,B,C,D) is 0.0 +/- 5.0e-12 (5ps)
11. Maximum loss for all signals is 5.0 dB at Nyquist frequency
12. Differential impedance for RCK and WCK is 100 ohms +/- 10%
13. Single-ended impedance for DQ, DQE, CA, and ERR is 50 ohms +/- 10%

Calculating the distance to time correspondence depends on the board material.
Example:
  tpd 147 ps/in 170 ps/in -> 147 fs/mil to 170 fs/mil
  @  5 mils spec'ed that is a intra-pair skew of 750 fs to 850 fs
  @ 10 mils spec'ed that is a intra-pair skew of 1.50 ps to 1.70 ps
<DOC>
#use-added-syntax(jitx)
defpackage jsl/protocols/memory/gddr7:
  import core
  import jitx
  import jitx/commands

  import jsl/bundles
  import jsl/errors
  import jsl/ensure
  import jsl/si
  import jsl/pin-assignment

doc: \<DOC>
@brief GDDR7 Bundle
One GDDR7 bundle consists of the connections between an integrated memory controller and 
one GDDR7 memory chip. The overall memory connections consists of 4 separate channels.
@member control Control channel for GDDR7
@member data Four data channels for GDDR7
<DOC>

public defn gddr7 () :
  gddr7-b()

public pcb-bundle gddr7-b () :
  name = "GDDR7"
  description = "Graphics Double Data Rate 7 Synchronous Dynamic Random-Access Memory protocol"
  port data    : gddr7-data-channel[4] ; one for each A B C D channel
  port control : gddr7-control-channel ; covers all A,B,C,D

doc: \<DOC>
@brief GDDR7 Data Bundle
One GDDR7 data bundle consists of the data connections between an integrated memory controller and 
one GDDR7 memory chip.
@member DQ  Data bit
@member RCK Read clock
@member WCK Write clock
@member CA  Address bit
@member DQE Data bit error detection
@member ERR Error flag
<DOC>

public pcb-bundle gddr7-data-channel :
  port DQ  : pin[10]   ; PAM3 or NRZ
  port RCK : diff-pair ; NRZ
  port WCK : diff-pair ; NRZ
  port CA  : pin[5]    ; NRZ
  port DQE             ; PAM3 or NRZ
  port ERR

doc: \<DOC>
@brief GDDR7 Control Bundle
One GDDR7 control bundle consists of the control connections between an integrated memory controller and 
one GDDR7 memory chip.
@member RESET_n  Reset signal
@member ZQ_AB    Impedance calibration for channels A and B
@member ZQ_CD    Impedance calibration for channels C and D
<DOC>

public pcb-bundle gddr7-control-channel :
  port RESET_n         ; NRZ
  port ZQ_AB
  port ZQ_CD

doc: \<DOC>
@brief Differential impedance specified by the GDDR7 standard
This is a helper function that returns the expected differential
trace impedance for the standard.

@return Upper/lower limits for the impedance.
<DOC>
public defn gddr7-get-trace-impedance () -> [Toleranced, Toleranced] :
  [100.0 +/- (5 %) 50.0 +/- (5 %)]


doc: \<DOC>
GDDR7 SI Constraint Type

This derives from the whole data lane constraint
as most of the controlled signals are single-ended but referenced to the
read and write clock lane pairs (tx/rx). All of these constraints
will be applied to the full lane.
    0.0 +/- 10.0e-15, ; Skew match for RCK_P RCK_N is 0.0 +/- 10.0e-15 (10 fs)
    0.0 +/- 10.0e-15, ; Skew match for WCK_P WCK_N is 0.0 +/- 10.0e-15 (10 fs)
    0.0 +/- 20.0e-12, ; Skew match between RCK and WCK is 0.0 +/- 20.0e-12 (20 ps)
    0.0 +/- 20.0e-12, ; Skew match between WCK and CA (per channel A,B,C,D) is 0.0 +/- 20.0e-12 (20 ps)
    0.0 +/- 20.0e-12, ; Skew match between RCK and DQ and DQE (per channel A,B,C,D) is 0.0 +/- 20.0e-12 (20 p
    0.0 +/- 20.0e-12, ; Skew match between WCK and DQ and DQE (per channel A,B,C,D) is 0.0 +/- 20.0e-12 (20 p
    0.0 +/- 5.0e-12,  ; Skew match between DQ and DQE (per channel A,B,C,D) is 0.0 +/- 5.0e-12 (5 ps)
    0.0 +/- 100.0e-12,; Skew match between Reset and CA (per channel A,B,C,D) is 0.0 +/- 100.0e-12 (100ps)
    0.0 +/- 100.0e-12,; Skew match between ERR and WCK (per channel A,B,C,D) is 0.0 +/- 100.0e-12 (100 ps)
    0.0 +/- 5.0e-12,  ; Skew match between CA (per channel A,B,C,D) is 0.0 +/- 5.0e-12 (5ps)

The `constrain` function for this type expects two compatible `gddr7-b` types.
<DOC>
public defstruct GDDR7-Constraint <: SI-Constraint :
  doc: \<DOC>
  RCK Intra-pair Timing Skew Constraint in Seconds
  <DOC>
  skew-rck:Toleranced with :
    default => 0.0 +/- 10.0e-15
  doc: \<DOC>
  WCK Intra-pair Timing Skew Constraint in Seconds
  <DOC>
  skew-wck:Toleranced with :
    default => 0.0 +/- 10.0e-15
  doc: \<DOC>
  RCK to WCK Inter-pair Timing Skew Constraint in Seconds
  <DOC>
  skew-rck-wck:Toleranced with :
    default => 0.0 +/- 20.0e-12
  doc: \<DOC>
  WCK to CA Inter-signal Timing Skew Constraint in Seconds
  <DOC>
  skew-wck-ca:Toleranced with :
    default => 0.0 +/- 20.0e-12
  doc: \<DOC>
  RCK to DQ/DQE Inter-pair Timing Skew Constraint in Seconds
  <DOC>
  skew-rck-dq:Toleranced with :
    default => 0.0 +/- 20.0e-12
  doc: \<DOC>
  WCK to DQ/DQE Inter-pair Timing Skew Constraint in Seconds
  <DOC>
  skew-wck-dq:Toleranced  with:
    default =>  0.0 +/- 20.0e-12
  doc: \<DOC>
  DQ and DQE Inter-pair Timing Skew Constraint in Seconds
  <DOC>
  skew-dq:Toleranced  with:
    default =>  0.0 +/- 5.0e-12
  doc: \<DOC>
  Reset to CA Inter-pair Timing Skew Constraint in Seconds
  <DOC>
  skew-rst-ca:Toleranced  with:
    default =>  0.0 +/- 100.0e-12
  doc: \<DOC>
  ERR and WCK Inter-pair Timing Skew Constraint in Seconds
  <DOC>
  skew-err-wck:Toleranced  with:
    default =>  0.0 +/- 100.0e-12
  doc: \<DOC>
  CA Inter-pair Timing Skew Constraint in Seconds
  <DOC>
  skew-ca:Toleranced  with:
    default =>  0.0 +/- 5.0e-12
  doc: \<DOC>
  Diff-Pair Max Loss Limit Constraint in dB
  <DOC>
  loss:Double with:
    ensure => ensure-positive!,
    default => 5.0
  doc: \<DOC>
  Differential Routing Structure for each Diff-Pair
  <DOC>
  diff-route-struct:DifferentialRoutingStructure 
  doc: \<DOC>
  Single-Ended Routing Structure for each SE signal
  <DOC>
  se-route-struct:RoutingStructure
with:
  keyword-constructor => true
  constructor => #GDDR7-Constraint
  printer => true

doc: \<DOC>
Constructor for the GDDR7 Link Constraint

@param rs Differential Routing Structure constraints for all
data lane signals, command/address, and the differential write and read clocks. 
This is not applied to the control signals.
<DOC>
public defn GDDR7-Constraint (diff-rs:DifferentialRoutingStructure rs:RoutingStructure) -> GDDR7-Constraint:
  GDDR7-Constraint(
    diff-route-struct = diff-rs
    se-route-struct = rs
  )

doc: \<DOC>
Constrain a GDDR7 Link

@param cst Constraint Object
@param src Source End Point - must be of `gddr7-b` type
@param dst Destination End Point - must be of `gddr7-b` type and match
the parameterization of `src`, including lane counts.
<DOC>
public defmethod constrain (cst:GDDR7-Constraint, src:JITXObject, dst:JITXObject) -> False :
  inside pcb-module:
    val cst-rck = DiffPair-Constraint(skew = skew-rck(cst) loss = loss(cst) route-struct = diff-route-struct(cst))
    val cst-wck = DiffPair-Constraint(skew = skew-wck(cst) loss = loss(cst) route-struct = diff-route-struct(cst))
    val guide-rck = src.data[0].RCK.P => dst.data[0].RCK.P
    val guide-reset = src.control.RESET_n => dst.control.RESET_n
    structure(guide-reset) = se-route-struct(cst)

    for i in 0 to 4 do :
      diffpair-constrain(cst-rck, src.data[i].RCK  dst.data[i].RCK)
      diffpair-constrain(cst-wck, src.data[i].WCK  dst.data[i].WCK)
      timing-window(skew-rck-wck(cst) guide-rck src.data[i].RCK.P => dst.data[i].RCK.P)
      timing-window(skew-rck-wck(cst) guide-rck src.data[i].WCK.P => dst.data[i].WCK.P)
      val guide-rck-chan = src.data[i].RCK.P => dst.data[i].RCK.P
      val guide-wck-chan = src.data[i].WCK.P => dst.data[i].WCK.P
      val guide-dq = src.data[i].DQ[0] => dst.data[i].DQ[0]
      val dq-bus = to-tuple $ cat{_, [src.data[i].DQE => dst.data[i].DQE]} $ for j in 0 to 10 seq : src.data[i].DQ[j] => dst.data[i].DQ[j]
      timing-window(skew-rck-dq(cst)    guide-rck-chan topos = dq-bus)
      timing-window(skew-wck-dq(cst)    guide-wck-chan topos = dq-bus)
      timing-window(skew-dq(cst)        guide-dq       topos = dq-bus)
      timing-window(skew-err-wck(cst),  guide-wck-chan src.data[i].ERR => dst.data[i].ERR)
      val ca-bus = to-tuple $ for j in 0 to 5 seq : src.data[i].CA[j] => dst.data[i].CA[j]
      val guide-ca = src.data[i].CA[0]   => dst.data[i].CA[0]
      timing-window(skew-wck-ca(cst), guide-wck-chan  topos = ca-bus)
      timing-window(skew-rst-ca(cst), guide-reset     topos = ca-bus)
      timing-window(skew-ca(cst),     guide-ca        topos = ca-bus)

      structure(src.data[i].DQ, dst.data[i].DQ) = se-route-struct(cst)
      structure(src.data[i].DQE, dst.data[i].DQE) = se-route-struct(cst)
      structure(src.data[i].CA, dst.data[i].CA) = se-route-struct(cst)
      structure(src.data[i].ERR, dst.data[i].ERR) = se-route-struct(cst)
      max-loss(loss(cst), src.data[i].DQ  => dst.data[i].DQ)
      max-loss(loss(cst), src.data[i].DQE => dst.data[i].DQE)
      max-loss(loss(cst), src.data[i].CA  => dst.data[i].CA)
      max-loss(loss(cst), src.data[i].ERR => dst.data[i].ERR)

doc: \<DOC>
Connect a GDDR7 Link
@brief This function connects a GDDR7 (Graphics Double Data Rate 7) link between two components, 'src' and 'dst', using specified routing structures. It applies the necessary constraints for proper GDDR7 signal integrity, including differential pair constraints, timing windows, and loss limits for various signals such as RCK (Read Clock), WCK (Write Clock), DQ (Data), CA (Command/Address), and ERR (Error) lines.
<DOC>
public defn connect-GDDR7 (src:JITXObject dst:JITXObject diff-rs:DifferentialRoutingStructure rs:RoutingStructure) :
  inside pcb-module :
    val gddr7-cst = GDDR7-Constraint(diff-rs, rs)
    constrain-topology(src, dst, gddr7-cst)
