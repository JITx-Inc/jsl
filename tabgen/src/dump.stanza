defpackage tabgen/dump:
  import core
  import arg-parser
  import tabgen/csv

defn dump-table (cmd-args:CommandArgs):

  val csv-file = args(cmd-args)[0]

  val table = extract-csv(csv-file)
  val hdr = headers(table)
  println("Header: Length=%_" % [length(hdr)])
  println("%," % [hdr])

  println("----------------------------------------")
  val rows = rows(table)
  println("Rows: Length = %_" % [length(rows)])
  for row in rows do:
    println("%," % [row])

  println("----------------------------------------")
  println("DONE")

val DUMP-MSG = \<MSG>
This command is a tool for dumping the passed CSV table.
This makes it easier to debug the generation functionality. CSV content
will be written to stdout.

User must pass a "Definitions Database" as the only positional argument. The
definitions database is generated by the 'stanza' compiler using the
'definitions-database' command.
<MSG>

val DUMP-ARG-MSG = \<MSG>
User must pass a single file path argument as a positional argument. This
file path should point to the CSV file to extract.
<MSG>

public defn setup-dump-cmd () -> Command :
  Command("dump", OneArg, DUMP-ARG-MSG, [], DUMP-MSG, dump-table)
