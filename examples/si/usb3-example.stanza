#use-added-syntax(jitx)
defpackage jsl/examples/si/usb3-example:
  import core
  import jitx
  import jitx/commands

doc: \<DOC>
The diff-imped-func template below is going to have to be provided by the user because it is stack-up dependant for now.
The function should return a pcb-differential-routing-structure that will be applied to the differential traces 
in the PCIe bus. It should also reference a single ended routing structure for the uncoupled region.
<DOC>
public defn diff-imped-func (impedance:Toleranced):
  pcb-differential-routing-structure diff (impedance:Toleranced) :
    name = "82.5 Ohm differential impedance - USB4"
    val tw = switch(typ(impedance)) :
      82.5  : 0.1400
    ; whatever layers are to be used for routing the differential pairs (defined by the user)
    layer(LayerIndex(1, Top)) :
      trace-width  = tw       ; mm
      pair-spacing = 2.0 * tw ; mm
      clearance    = 0.300    ; mm
      velocity = 0.19e12      ; mm/s
      insertion-loss = 0.008  ; db/mm @ 1GHz 

    uncoupled-region = se-50
  diff 


doc: \<DOC>
The pcb-routing-structure(s) below are just examples of the routing structures that need to be maintained 
in the project code because they are dependant on the stack-up and other factors. When using the connect-pci-e()
function, there are board-specific constraints that need to be applied.
<DOC>
public pcb-routing-structure se-50 :
  name = "50 Ohm single-ended"
  layer(Top) :
    trace-width = 0.15    ; mm
    clearance = 0.15     ; mm
    velocity = 0.19e12   ; mm/s
    insertion-loss = 0.008  ; db/mm @ 1GHz 
    neck-down = NeckDown(
      trace-width = 0.156 
      clearance = 0.1 
    )

  layer(Bottom) :
    trace-width = 0.15    ; mm
    clearance = 0.15         ; mm
    velocity = 0.19e12   ; mm/s
    insertion-loss = 0.008  ; db/mm @ 1GHz 
    neck-down = NeckDown(
      trace-width = 0.156 
      clearance = 0.1 
    )
