#use-added-syntax(jitx)
defpackage jsl/examples/protocols/pcie/main:
  import core
  import collections
  import jitx
  import jitx/commands


  import jsl/design/settings

  import jsl/protocols/pcie
  import jsl/si/helpers

  import jsl/examples/protocols/common/example-board
  import jsl/examples/protocols/common/example-components
  import jsl/examples/protocols/pcie/pcie-src


pcb-module pcie-example :

  inst dut1 : jsl/examples/protocols/pcie/pcie-src/module
  inst dut2 : jsl/examples/protocols/pcie/pcie-src/module

  require src : pcie(2) from dut1
  require dst : pcie(2) from dut2

  require src-p : pcie(2, PCIe-PRSNT#) from dut1 
  require dst-p : pcie(2, PCIe-PRSNT#) from dut2

  val [skew, loss] = pcie-get-skew-loss-vals(PCIE-V4)

  connect-pcie(skew, loss, block-cap(220.0e-9), false, src, dst)
  connect-pcie(skew, loss, block-cap(220.0e-9), false, src-p, dst-p)

  val trace-imped = pcie-get-trace-impedance(PCIE-V4)
  pcie-apply-routing-structure(diff(trace-imped), src, dst)
  pcie-apply-routing-structure(diff(trace-imped), src-p, dst-p)

set-current-design("pcie-example")
setup-board()
; Set the schematic sheet size
set-paper(ANSI-A)

; Set the top level module (the module to be compile into a schematic and PCB)
set-main-module(pcie-example)

; View the results
view-board()
; view-schematic()
view-design-explorer()
; view-bom(BOM-STD)
