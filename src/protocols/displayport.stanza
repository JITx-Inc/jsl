#use-added-syntax(jitx)
defpackage jsl/protocols/displayport:
  import core
  import jitx
  import jitx/commands

  import jsl/bundles
  import jsl/errors
  import jsl/ensure
  import jsl/si
  import jsl/pin-assignment


public val DISPLAYPORT_NUM_LANES = 4
public val DISPLAYPORT_NUM_CONFIGS = 2

doc: \<DOC>
@brief DisplayPort Generation enums
This is a fixed list of possible generation definitions for DisplayPort
<DOC>

public pcb-enum jsl/protocols/displayport/DPVersion:
  DP1p0  ; 10.80 Gbit/s / 4 lanes =>  2.7 Gbit/s / 10 UI =>  270 MHz clk
  DP1p1  ; 10.80 Gbit/s / 4 lanes =>  2.7 Gbit/s / 10 UI =>  270 MHz clk
  DP1p2  ; 21.60 Gbit/s / 4 lanes =>  5.4 Gbit/s / 10 UI =>  540 MHz clk
  DP1p2a ; 21.60 Gbit/s / 4 lanes =>  5.4 Gbit/s / 10 UI =>  540 MHz clk
  DP1p3  ; 32.40 Gbit/s / 4 lanes =>  8.1 Gbit/s / 10 UI =>  810 MHz clk
  DP1p4  ; 32.40 Gbit/s / 4 lanes =>  8.1 Gbit/s / 10 UI =>  810 MHz clk
  DP1p4a ; 32.40 Gbit/s / 4 lanes =>  8.1 Gbit/s / 10 UI =>  810 MHz clk
  DP2p0  ; 80.00 Gbit/s / 4 lanes => 20.0 Gbit/s / 10 UI => 2000 MHz clk
  DP2p1  ; 80.00 Gbit/s / 4 lanes => 20.0 Gbit/s / 10 UI => 2000 MHz clk
  DP2p1a ; 80.00 Gbit/s / 4 lanes => 20.0 Gbit/s / 10 UI => 2000 MHz clk

doc: \<DOC>
@brief DisplayPort Bundle
The Data Bundle consists of 4 lane pairs (1 RX or TX pair set = 1 lane)
The bundle also constrains an AUX channel (differential pair) and a HPD pin

@member aux Differential pair for the auxiliary channel
@member lane Four differential pairs for data transfer
@member hpd Hot plug detect
<DOC>

public pcb-bundle displayport :
  name = "DisplayPort"
  description = "DisplayPort Digital Display Interface"
  port aux  : diff-pair
  port lane : diff-pair[DISPLAYPORT_NUM_LANES]
  port hpd  : pin ; hot plug detect


doc: \<DOC>
Display Port Bundle for Connectors
This bundle is applicable for connector connections where more than the data lanes are needed.

@member dp DisplayPort bundle for data communication
@member gnd ground connection
@member dp_pwr power bundle for DisplayPort
@member config signals for configuration pins (DISPLAYPORT_NUM_CONFIGS)
<DOC>
public pcb-bundle displayport-connector :
  port dp : displayport
  ; In the connector, there are 5 ground signals but for
  ;  this bundle we only place 1 for simplicity. Once on the board,
  ;  the need for separate ground signals is unnecessary.
  pin gnd
  port dp_pwr : power ; DP_PWR and RETURN
  port config : pin[DISPLAYPORT_NUM_CONFIGS]

doc: \<DOC>
@brief Curated values for skew and loss of DisplayPort Channel
This is a helper function that returns the bounds on the intra-pair
skew timing and maximum loss as expected by the particular standard targeted by
the user.The values returned are a toleranced value with upper/lower limits for the
intra-pair skew and the maximum loss as a double representing dB.

Calculating the intra-pair skew distance to time correspondence depends on the material.
tpd 147 ps/in 170 ps/in -> 147 fs/mil to 170 fs/mil
@  5 mils spec'ed that is a intra-pair skew of 750 fs to 850 fs
@ 10 mils spec'ed that is a intra-pair skew of 1.50 ps to 1.70 ps
<DOC>

public defn displayport-get-skew-loss-vals (gen:jsl/protocols/displayport/DPVersion) -> [Toleranced, Double]:
  switch(gen) :
    DP1p0  : [0.0 +/- 20.0e-12, 15.0] ; 
    DP1p1  : [0.0 +/- 20.0e-12, 15.0] ; 
    DP1p2  : [0.0 +/- 20.0e-12, 15.0] ; 
    DP1p2a : [0.0 +/- 20.0e-12, 15.0] ; 
    DP1p3  : [0.0 +/- 20.0e-12, 15.0] ; 
    DP1p4  : [0.0 +/- 20.0e-12, 15.0] ; 
    DP1p4a : [0.0 +/- 20.0e-12, 15.0] ; 
    DP2p0  : [0.0 +/- 20.0e-12, 15.0] ; 
    DP2p1  : [0.0 +/- 20.0e-12, 15.0] ; 
    DP2p1a : [0.0 +/- 20.0e-12, 15.0] ; 

doc: \<DOC>
@brief Get inter-pair skew values for DisplayPort Channel
This function returns the allowable inter-pair skew timing for DisplayPort lanes
as expected by the particular standard targeted by the user. The returned value
is a Toleranced value with upper/lower limits for the inter-pair skew.

Inter-pair skew refers to the timing difference between different differential pairs
in the DisplayPort interface, which is critical for maintaining signal integrity
across multiple high-speed lanes.

@param gen The DisplayPort generation (version) to get the inter-pair skew for
@return Allowable inter-pair skew as a Toleranced value in seconds
<DOC>
public defn displayport-get-inter-skew (gen:jsl/protocols/displayport/DPVersion) -> Toleranced:
  switch(gen) :
    DP1p0  : 0.0 +/- (2.0 * 400.0e-12) ; 2 symbol lengths at 2.7 Gbps
    DP1p1  : 0.0 +/- (2.0 * 371.0e-12) ; 2 symbol lengths at 2.7 Gbps
    DP1p2  : 0.0 +/- (2.0 * 337.0e-12) ; 2 symbol lengths at 5.4 Gbps
    DP1p2a : 0.0 +/- (2.0 * 337.0e-12) ; 2 symbol lengths at 5.4 Gbps
    DP1p3  : 0.0 +/- (2.0 * 231.0e-12) ; 2 symbol lengths at 8.1 Gbps
    DP1p4  : 0.0 +/- (2.0 * 231.0e-12) ; 2 symbol lengths at 8.1 Gbps
    DP1p4a : 0.0 +/- (2.0 * 231.0e-12) ; 2 symbol lengths at 8.1 Gbps
    DP2p0  : 0.0 +/- (2.0 * 100.0e-12) ; 2 symbol lengths at 20.0 Gbps
    DP2p1  : 0.0 +/- (2.0 * 100.0e-12) ; 2 symbol lengths at 20.0 Gbps
    DP2p1a : 0.0 +/- (2.0 * 100.0e-12) ; 2 symbol lengths at 20.0 Gbps


doc: \<DOC>
@brief Differential impedance specified by the DisplayPort standard
This is a helper function that returns the expected differential
trace impedance for the specified generation of the DisplayPort standard.

@return Upper/lower limits for the impedance.
<DOC>

public defn displayport-get-trace-impedance () -> Toleranced :
  100.0 +/- (10 %)

public defstruct DisplayPort-Constraint <: DP-Constraint :
  skew:Toleranced  with: (as-method => true)
  loss:Double with: (
    ensure => ensure-positive!,
    as-method => true
    )
  route-struct:DifferentialRoutingStructure with: (as-method => true)
  inter-skew:Toleranced
with:
  constructor => #DisplayPort-Constraint

doc: \<DOC>
SI Constraint For DisplayPort

This constraint assumes the endpoints are {@link displayport} bundles. 
The code will construct the necessary skew and loss constraints for 
this bundle according to the DisplayPort specifications.

@param skew Intra-pair skew for the P/N of each differential pair (lanes and AUX)
@param loss Max Loss for any of the differential pairs
@param route-struct User provided routing structure for each of the
differential pair bundles of the DisplayPort interface
@param inter-skew Inter-pair skew between data lanes
<DOC>
public defn DisplayPort-Constraint (
  --
  skew:Toleranced
  loss:Double
  route-struct:DifferentialRoutingStructure
  inter-skew:Toleranced
  ) -> DisplayPort-Constraint:
  #DisplayPort-Constraint(skew, loss, route-struct, inter-skew)

public defn DisplayPort-Constraint (
  --
  route-struct:DifferentialRoutingStructure
  gen:DPVersion = DP1p2
  ) -> DisplayPort-Constraint :
  val [s, ml] = displayport-get-skew-loss-vals(gen)
  val ins = displayport-get-inter-skew(gen)
  #DisplayPort-Constraint(s, ml, route-struct, ins)

public defmethod constrain (cst:DisplayPort-Constraint, src:JITXObject, dst:JITXObject) -> False :
  for i in 0 to DISPLAYPORT_NUM_LANES do:
    dp-constrain(cst, src.lane[i], dst.lane[i])
  
  dp-constrain(cst, src.aux, dst.aux)

  ; Apply inter-pair skew constraint
  timing-window(
    inter-skew(cst)
    src.lane[0].P => dst.lane[0].P,
    src.lane => dst.lane
  )